<?xml version="1.0" encoding="utf-8" ?>
<castle>
  <properties>
    <rootItemID>1</rootItemID>
    <nhSettings>
      <dictionary>
        <entry key="hibernate.connection.provider">NHibernate.Connection.DriverConnectionProvider</entry>
        <entry key="hibernate.connection.connection_string_name">TestConnection</entry>

        <entry key="hibernate.cache.use_second_level_cache">false</entry>
        <entry key="hibernate.connection.driver_class">NHibernate.Driver.SqlClientDriver</entry>
        <entry key="hibernate.dialect">NHibernate.Dialect.MsSql2005Dialect</entry>
        <entry key="hibernate.show_sql">true</entry>
      </dictionary>
    </nhSettings>
  </properties>

  <include uri="assembly://N2/Edit/edit.castle.config"/>
  <components>
    <component id="n2.typeFinder.fake" service="N2.Engine.ITypeFinder, N2" type="N2.Engine.AppDomainTypeFinder, N2"/>
    <component id="n2.sessionProvider.fake" service="N2.Persistence.NH.ISessionProvider, N2" type="N2.Persistence.NH.DefaultSessionProvider, N2"/>
    <component id="n2.integrity.fake" service="N2.Integrity.IIntegrityManager, N2" type="N2.Tests.Fakes.FakeIntegrityManager, N2.Tests"/>
    <component id="n2.webContext.fake" service="N2.Web.IWebContext, N2" type="N2.Tests.Fakes.FakeWebContextWrapper, N2.Tests"/>

    <!--<component id="n2.integrity" service="N2.Integrity.IIntegrityManager, N2" type="N2.Integrity.DefaultIntegrityManager, N2"/>-->
    <component id="n2.integrityEnforcer" type="N2.Integrity.IntegrityEnforcer, N2"/>

    <component id="n2.security" service="N2.Security.ISecurityManager, N2" type="N2.Security.DefaultSecurityManager, N2"/>
    <component id="n2.securityEnforcer" service="N2.Security.ISecurityEnforcer, N2" type="N2.Security.SecurityEnforcer, N2"/>

    <component id="n2.attributeExplorer"  type="N2.Definitions.AttributeExplorer`1, N2"/>
    <component id="n2.editableHierarchyBuilder"     type="N2.Definitions.EditableHierarchyBuilder`1, N2"/>
    <!--<component id="n2.typeFinder" service="N2.Engine.ITypeFinder, N2" type="N2.Engine.WebAppTypeFinder, N2"/>-->
    <component id="n2.definitions" service="N2.Definitions.IDefinitionManager, N2" type="N2.Definitions.DefaultDefinitionManager, N2"/>
    <component id="n2.definitionBuilder" type="N2.Definitions.DefinitionBuilder, N2"/>

    <component id="n2.pluginInitializer" service="N2.Plugin.IPluginInitializerInvoker, N2"  type="N2.Plugin.PluginInitializerInvoker, N2"/>

    <!--Persistence-->
    <component id="n2.configurationBuilder" service="N2.Persistence.NH.IConfigurationBuilder, N2" type="N2.Persistence.NH.DefaultConfigurationBuilder, N2">
      <parameters>
        <Properties>#{nhSettings}</Properties>
      </parameters>
    </component>
    <component id="n2.itemNotifier" service="N2.Persistence.IItemNotifier, N2" type="N2.Persistence.DefaultItemNotifier, N2"/>
    <component id="n2.interceptor" service="NHibernate.IInterceptor, NHibernate" type="N2.Persistence.NH.NotifyingInterceptor, N2"/>
    <!--<component id="n2.sessionProvider" service="N2.Persistence.NH.ISessionProvider, N2" type="N2.Persistence.NH.WebSessionProvider, N2"/>-->
    <component id="n2.repository" service="N2.Persistence.IRepository`2, N2" type="N2.Persistence.NH.NHRepository`2, N2"/>
    <component id="n2.repository.nh" service="N2.Persistence.NH.INHRepository`2, N2" type="N2.Persistence.NH.NHRepository`2, N2"/>
    <component id="n2.versioning" service="N2.Persistence.IVersionManager, N2" type="N2.Persistence.VersionManager, N2"/>
    <component id="n2.persister" service="N2.Persistence.IPersister, N2" type="N2.Persistence.NH.DefaultPersister, N2"/>
    <component id="n2.itemFinder" service="N2.Persistence.Finder.IItemFinder, N2" type="N2.Persistence.NH.Finder.ItemFinder, N2"/>

    <!--Web-->
    <component id="n2.defaultSite" type="N2.Web.Site, N2">
      <parameters>
        <rootItemID>#{rootItemID}</rootItemID>
      </parameters>
    </component>
    <!--<component id="n2.webContext" service="N2.Web.IWebContext, N2" type="N2.Web.WebContextWrapper, N2"/>-->
    <component id="n2.urlParser" service="N2.Web.IUrlParser, N2" type="N2.Web.DefaultUrlParser, N2"/>
    <component id="n2.urlRewriter" service="N2.Web.IUrlRewriter, N2" type="N2.Web.UrlRewriter, N2" />
    <component id="n2.requestHandler" service="N2.Web.IRequestLifeCycleHandler, N2" type="N2.Web.DefaultRequestLifeCycleHandler, N2" />
  </components>
</castle>
